apiVersion: apps/v1
kind: Deployment
metadata:
  name: "feature-store-dp-api"
  labels:
    {{- include "feature-store-dp-api.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  {{- with .Values.deploymentStrategy }}
  strategy:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "feature-store-dp-api.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "feature-store-dp-api.selectorLabels" . | nindent 8 }}
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "feature-store-dp-api.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: "{{ .Values.applicationEnv.containerName }}"
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{trimAll "/" .Values.oci_meta.repo }}/{{trimAll "/" .Values.oci_meta.images.api.image}}:{{ .Values.oci_meta.images.api.tag }}"
          imagePullPolicy: IfNotPresent
          envFrom:
          - configMapRef:
              name: "feature-store-dp-api-configmap"
          ports:
            - name: http
              containerPort: 21000
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /health
              port: 21000
              httpHeaders:
                - name: Host
                  value: 127.0.0.1
            initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
            failureThreshold: {{ .Values.livenessProbe.failureThreshold }}
            periodSeconds: {{ .Values.livenessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.livenessProbe.timeoutSeconds }}
          readinessProbe:
            httpGet:
              path: /health
              port: 21000
              httpHeaders:
                - name: Host
                  value: 127.0.0.1
            initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.readinessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.readinessProbe.timeoutSeconds }}
            failureThreshold: {{ .Values.readinessProbe.failureThreshold }}
          volumeMounts:
            {{- toYaml .Values.volumeMounts | nindent 12 }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
            # To trick marketplace into thinking that authoriser is being used. This will only return true in validation
            # phase by marketplace
        {{- if eq "idogsu2ylimg/feature-store" .Values.oci_meta.images.authoriser.image }}
        - name: "feature-store-authoriser"
          image: "{{ .Values.oci_meta.repo }}/{{ .Values.oci_meta.images.authoriser.image}}:{{ .Values.oci_meta.images.authoriser.tag }}"
        {{- end}}

      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
        {{- toYaml .Values.volumes | nindent 12 }}

